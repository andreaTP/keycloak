name: Keycloak Operator CI

on: [push, pull_request]

env:
  JDK_VERSION: 11

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ci-operator-keycloak-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update maven settings
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Cache Maven packages
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: cache-1-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Create the Keycloak distribution
        run: |
          mvn clean install -DskipTests -DskipExamples -DskipTestsuite
  test:
    name: test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.4.3
        with:
          minikube version: v1.24.0
          kubernetes version: v1.22.3
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker
          start args: ' --addons=ingress '
      - name: Setup Java 11
        uses: actions/setup-java@v2.3.0
        with:
          java-version: '11'
          distribution: 'adopt'
          java-package: jdk
      - name: Build , deploy and test operator in minikube
        run: |
          eval $(minikube -p minikube docker-env) 
          cd operator
          mvn -B clean verify -Doperator \
              -Dquarkus.container-image.build=true \
              -Dquarkus.kubernetes.deploy=true \
              -Dquarkus.kubernetes.namespace=default \
              -Dquarkus.kubernetes-client.namespace=default \
              -Dquarkus.kubernetes.deployment-target=minikube \
              --no-transfer-progress
              -Dtest=OperatorE2ERemoteIT
  deploy:
    name: deploy to quay
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Deploy snapshot image to quay
        run: |
          cd operator
          mvn -B package -Doperator \
                      -Dquarkus.container-image.push=true \
                      -Dquarkus.container-image.group=${{ github.repository_owner }} \
                      -Dquarkus.container-image.additional-tags=latest-jar
                      -Dquarkus.container-image.registry=${{ secrets.REGISTRY }} 
                      -Dquarkus.container-image.username=${{ secrets.REGISTRY_ROBOT_USERNAME }} 
                      -Dquarkus.container-image.password=${{ secrets.REGISTRY_ROBOT_TOKEN }}
                      -DskipTests \
                      --no-transfer-progress